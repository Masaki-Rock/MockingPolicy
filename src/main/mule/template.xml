<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy"
      xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform"
      xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
               http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
               http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd
               http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd">

    <http-policy:proxy name="{{{policyId}}}-custom-policy">
        <http-policy:source propagateMessageTransformations="{{{evaluateInListenerRequest}}}">
            <set-variable value="{{{executeflg}}}" doc:name="Set Flg" variableName="flg"/>
            {{#if evaluateInListenerRequest}}
            <choice>
                <when expression="#[vars.flg]">
                    <http-transform:set-requester-request requestPath="{{{listenerRequestPath}}}">
                        <http-transform:body>{{{listenerRequestBody}}}</http-transform:body>
                        <http-transform:headers>{{{listenerRequestHeaders}}}</http-transform:headers>
                        <http-transform:uri-params>{{{listenerRequestURIParams}}}</http-transform:uri-params>
                        <http-transform:query-params>{{{listenerRequestQueryParams}}}</http-transform:query-params>
                    </http-transform:set-requester-request>
                </when>
            </choice>
            {{/if}}
            {{#if evaluateInListenerRequest}}
            <set-payload value="{{{setBeforeListnerPayload}}}" />
            {{/if}}
            <http-policy:execute-next/>
            {{#if evaluateInListenerResponse}}
            <choice>
                <when expression="#[vars.flg]">
                    <http-transform:set-response statusCode="{{{listenerResponseStatusCode}}}" reasonPhrase="{{{listenerResponseReasonPhrase}}}">
                        <http-transform:body>{{{listenerResponseBody}}}</http-transform:body>
                        <http-transform:headers>{{{listenerResponseHeaders}}}</http-transform:headers>
                    </http-transform:set-response>
                </when>
            </choice>
            {{/if}}
            <logger level="INFO" message="{{{debugLogExpression}}}" />
        </http-policy:source>
        <http-policy:operation propagateMessageTransformations="{{{evaluateInRequesterResponse}}}">
            {{#if evaluateInRequesterRequest}}
            <choice>
                <when expression="#[vars.flg]">
                    <http-transform:set-requester-request requestPath="{{{requesterRequestPath}}}">
                        <http-transform:body>{{{requesterRequestBody}}}</http-transform:body>
                        <http-transform:headers>{{{requesterRequestHeaders}}}</http-transform:headers>
                        <http-transform:uri-params>{{{requesterRequestURIParams}}}</http-transform:uri-params>
                        <http-transform:query-params>{{{requesterRequestQueryParams}}}</http-transform:query-params>
                    </http-transform:set-requester-request>
                </when>
            </choice>
            {{/if}}
            <http-policy:execute-next/>
            {{#if evaluateInRequesterResponse}}
            <choice>
                <when expression="#[vars.flg]">
                    <http-transform:set-response statusCode="{{{requesterResponseStatusCode}}}" reasonPhrase="{{{requesterResponseReasonPhrase}}}">
                        <http-transform:body>{{{requesterResponseBody}}}</http-transform:body>
                        <http-transform:headers>{{{requesterResponseHeaders}}}</http-transform:headers>
                    </http-transform:set-response>
                </when>
            </choice>
            {{/if}}
            <logger level="INFO" message="{{{debugLogExpression}}}" />
        </http-policy:operation>
    </http-policy:proxy>
</mule> 